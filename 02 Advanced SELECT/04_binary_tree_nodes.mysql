# URL: https://www.hackerrank.com/challenges/binary-search-tree-1/problem

# You are given a table, BST, containing two columns: N and P, where N represents the value of a node in Binary Tree, and P is the parent of N.
# Write a query to find the node type of Binary Tree ordered by the value of the node. Output one of the following for each node:

# - Root: If node is root node.
# - Leaf: If node is leaf node.
# - Inner: If node is neither root nor leaf node.

SELECT 
    N, 
    IF(P IS NULL, 
       'Root', 
       IF((SELECT COUNT(*) 
           FROM BST 
           WHERE P=B.N)>0, 
          'Inner', # if count > 0, then it does appear in P and is thus an inner node 
          'Leaf')) # if count = 0, then it does not appear in P and is thus a leaf 
FROM BST AS B 
ORDER BY N
